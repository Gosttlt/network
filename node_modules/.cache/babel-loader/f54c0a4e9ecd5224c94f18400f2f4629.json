{"ast":null,"code":"var _jsxFileName = \"/Users/viktortursunkulov/Desktop/it/src/Components/hoc/WithAuthRedirect.jsx\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport let withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      });\n      return React.createElement(Component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n  return ConnectAuthRedirectComponent;\n};","map":{"version":3,"sources":["/Users/viktortursunkulov/Desktop/it/src/Components/hoc/WithAuthRedirect.jsx"],"names":["React","Redirect","connect","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","render","props","ConnectAuthRedirectComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,IAAIC,0BAA0B,GAAIC,KAAD,KAAY;AACzCC,EAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADsB,CAAZ,CAAjC;;AAKA,OAAO,IAAIE,gBAAgB,GAAIC,SAAD,IAAe;AACxC,QAAMC,iBAAN,SAAgCT,KAAK,CAACQ,SAAtC,CAAgD;AAC7CE,IAAAA,MAAM,GAAG;AACL,UAAI,CAAC,KAAKC,KAAL,CAAWN,MAAhB,EAAwB,OAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACxB,aAAO,oBAAC,SAAD,oBAAe,KAAKM,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;;AAJ4C;;AAM/C,MAAIC,4BAA4B,GAAGV,OAAO,CAACC,0BAAD,CAAP,CAAoCM,iBAApC,CAAnC;AACD,SAAOG,4BAAP;AACJ,CATM","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n })\n\n\nexport let withAuthRedirect = (Component) => {\n     class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n            return <Component {...this.props} />\n        }\n    }\n      let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n     return ConnectAuthRedirectComponent;\n}\n\n\n"]},"metadata":{},"sourceType":"module"}