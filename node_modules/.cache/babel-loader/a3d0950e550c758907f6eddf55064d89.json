{"ast":null,"code":"var _jsxFileName = \"/Users/viktortursunkulov/Desktop/gitt/network/src/Components/Profile/ProfileInfo/ProfileStatus.tsx\";\nimport React, { useState, useEffect } from 'react';\n\nconst StatusProfile = props => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  let activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  let deActivateEditMode = () => {\n    setEditMode(false);\n    props.getUpdateStatus(status);\n  };\n\n  let onStatusChange = e => {\n    setStatus(e.currentTarget.value);\n  };\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n  return React.createElement(React.Fragment, null, !editMode && React.createElement(\"span\", {\n    onDoubleClick: activateEditMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.status || 'no status'), editMode && React.createElement(\"input\", {\n    onBlur: deActivateEditMode,\n    onChange: onStatusChange,\n    autoFocus: true,\n    type: \"text\",\n    value: status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), \" \");\n};\n\nexport default StatusProfile;","map":{"version":3,"sources":["/Users/viktortursunkulov/Desktop/gitt/network/src/Components/Profile/ProfileInfo/ProfileStatus.tsx"],"names":["React","useState","useEffect","StatusProfile","props","editMode","setEditMode","status","setStatus","activateEditMode","deActivateEditMode","getUpdateStatus","onStatusChange","e","currentTarget","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAMA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AACzB,MAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAI,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACG,KAAK,CAACG,MAAP,CAAlC;;AACA,MAAIE,gBAAgB,GAAG,MAAM;AACrBH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACP,GAFD;;AAGA,MAAII,kBAAkB,GAAG,MAAM;AACvBJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAF,IAAAA,KAAK,CAACO,eAAN,CAAsBJ,MAAtB;AACP,GAHD;;AAKA,MAAIK,cAAc,GAAIC,CAAD,IAAO;AACpBL,IAAAA,SAAS,CAACK,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAT;AACP,GAFD;;AAGAb,EAAAA,SAAS,CAAC,MAAM;AACRM,IAAAA,SAAS,CAACJ,KAAK,CAACG,MAAP,CAAT;AACP,GAFQ,EAEN,CAACH,KAAK,CAACG,MAAP,CAFM,CAAT;AAIA,SAAQ,0CACC,CAACF,QAAD,IACO;AAAM,IAAA,aAAa,EAAEI,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACUL,KAAK,CAACG,MAAN,IAAc,WADxB,CAFR,EAKEF,QAAQ,IACF;AAAO,IAAA,MAAM,EAAEK,kBAAf;AAAmC,IAAA,QAAQ,EAAEE,cAA7C;AAA6D,IAAA,SAAS,EAAE,IAAxE;AAA8E,IAAA,IAAI,EAAC,MAAnF;AAA0F,IAAA,KAAK,EAAEL,MAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANR,MAAR;AAQP,CA1BD;;AA2BA,eAAeJ,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\ntype PropsType = {\n        status: string| null\n}\n\nconst StatusProfile = (props) => {\n        let [editMode, setEditMode] = useState(false);\n        let [status, setStatus] = useState(props.status);\n        let activateEditMode = () => {\n                setEditMode(true)\n        }\n        let deActivateEditMode = () => {\n                setEditMode(false);\n                props.getUpdateStatus(status)\n        }\n\n        let onStatusChange = (e) => {\n                setStatus(e.currentTarget.value)\n        }\n        useEffect(() => {\n                setStatus(props.status)\n        }, [props.status])\n\n        return (<>\n                {!editMode &&\n                        <span onDoubleClick={activateEditMode}>\n                                { props.status||'no status'}\n                    </span>\n                }{editMode &&\n                        <input onBlur={deActivateEditMode} onChange={onStatusChange} autoFocus={true} type=\"text\" value={status}/>\n                } </>)\n}\nexport default StatusProfile;"]},"metadata":{},"sourceType":"module"}