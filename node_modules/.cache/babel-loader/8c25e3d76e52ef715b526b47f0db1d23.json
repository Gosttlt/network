{"ast":null,"code":"import { authAPI } from \"../Components/api/api\";\nimport { stopSubmit } from \"redux-form\";\nconst SET_USER_DATA = 'SET_USER_DATA';\nlet initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_USER_DATA:\n      return { ...state,\n        ...action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (id, email, login, isAuth) => ({\n  type: SET_USER_DATA,\n  payload: {\n    id,\n    email,\n    login,\n    isAuth\n  }\n});\nexport const getAuthMe = () => async dispatch => {\n  let response = await authAPI.getAuth();\n\n  if (response.data.resultCode === 0) {\n    let {\n      id,\n      login,\n      email\n    } = response.data.data;\n    dispatch(setAuthUserData(id, email, login, true));\n  }\n};\nexport const login = (email, password, rememberMe) => async dispatch => {\n  let response = await authAPI.login(email, password, rememberMe);\n\n  if (response.data.resultCode === 0) {\n    dispatch(getAuthMe());\n  } else {\n    let message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error';\n    dispatch(stopSubmit('edit-profile', {\n      _error: message\n    }));\n  }\n};\nexport const logout = () => async dispatch => {\n  let response = await authAPI.logout();\n\n  if (response.data.resultCode === 0) {\n    dispatch(setAuthUserData(null, null, null, false));\n  }\n};\nexport default authReducer;","map":{"version":3,"sources":["/Users/viktortursunkulov/Desktop/it/src/Redux/auth-reducer.js"],"names":["authAPI","stopSubmit","SET_USER_DATA","initialState","id","email","login","isAuth","authReducer","state","action","type","payload","setAuthUserData","getAuthMe","dispatch","response","getAuth","data","resultCode","password","rememberMe","message","messages","length","_error","logout"],"mappings":"AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,EAAE,EAAE,IADW;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEH,WAAGC,MAAM,CAACE;AAFP,OAAP;;AAIJ;AACI,aAAOH,KAAP;AAPR;AASH,CAVD;;AAYA,OAAO,MAAMI,eAAe,GAAG,CAACT,EAAD,EAAKC,KAAL,EAAYC,KAAZ,EAAmBC,MAAnB,MAA+B;AAAEI,EAAAA,IAAI,EAAET,aAAR;AAAuBU,EAAAA,OAAO,EAAE;AAAER,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB;AAAhC,CAA/B,CAAxB;AACP,OAAO,MAAMO,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC/C,MAAIC,QAAQ,GAAG,MAAMhB,OAAO,CAACiB,OAAR,EAArB;;AACA,MAAID,QAAQ,CAACE,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAChC,QAAI;AAAEf,MAAAA,EAAF;AAAME,MAAAA,KAAN;AAAaD,MAAAA;AAAb,QAAuBW,QAAQ,CAACE,IAAT,CAAcA,IAAzC;AACAH,IAAAA,QAAQ,CAACF,eAAe,CAACT,EAAD,EAAKC,KAAL,EAAYC,KAAZ,EAAmB,IAAnB,CAAhB,CAAR;AACH;AACJ,CANM;AAUP,OAAO,MAAMA,KAAK,GAAG,CAACD,KAAD,EAAQe,QAAR,EAAkBC,UAAlB,KAAiC,MAAON,QAAP,IAAoB;AACtE,MAAIC,QAAQ,GAAG,MAAMhB,OAAO,CAACM,KAAR,CAAcD,KAAd,EAAqBe,QAArB,EAA+BC,UAA/B,CAArB;;AACA,MAAIL,QAAQ,CAACE,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAChCJ,IAAAA,QAAQ,CAACD,SAAS,EAAV,CAAR;AACH,GAFD,MAGK;AACD,QAAIQ,OAAO,GAAGN,QAAQ,CAACE,IAAT,CAAcK,QAAd,CAAuBC,MAAvB,GAAgC,CAAhC,GAAoCR,QAAQ,CAACE,IAAT,CAAcK,QAAd,CAAuB,CAAvB,CAApC,GAAgE,YAA9E;AACAR,IAAAA,QAAQ,CAACd,UAAU,CAAC,cAAD,EAAiB;AAAEwB,MAAAA,MAAM,EAAEH;AAAV,KAAjB,CAAX,CAAR;AACH;AACJ,CATM;AAWP,OAAO,MAAMI,MAAM,GAAG,MAAM,MAAOX,QAAP,IAAoB;AAC5C,MAAIC,QAAQ,GAAG,MAAMhB,OAAO,CAAC0B,MAAR,EAArB;;AACA,MAAIV,QAAQ,CAACE,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAChCJ,IAAAA,QAAQ,CAACF,eAAe,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,CAAhB,CAAR;AACH;AACJ,CALM;AASP,eAAeL,WAAf","sourcesContent":["import { authAPI } from \"../Components/api/api\";\nimport { stopSubmit } from \"redux-form\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\n\nlet initialState = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false,\n}\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n            }\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (id, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { id, email, login, isAuth } });\nexport const getAuthMe = () => async (dispatch) => {\n    let response = await authAPI.getAuth();\n    if (response.data.resultCode === 0) {\n        let { id, login, email } = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\n\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthMe())\n    }\n    else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error';\n        dispatch(stopSubmit('edit-profile', { _error: message }))\n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false))\n    }\n}\n\n\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}