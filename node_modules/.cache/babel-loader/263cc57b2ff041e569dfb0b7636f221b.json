{"ast":null,"code":"var _jsxFileName = \"/Users/viktortursunkulov/Desktop/gitt/network/src/Components/Login/Login.jsx\";\nimport React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { InputForm, fieldCreator } from '../common/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../utils/validators/validators';\nimport { login } from '../../Redux/auth-reducer';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport s from '../common/FormsControls/FormsControls.module.css';\nconst maxLength7 = maxLengthCreator(20);\n\nconst LoginForm = ({\n  handleSubmit,\n  error,\n  captchaUrl\n}) => {\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, fieldCreator('email', 'email', InputForm, [required, maxLength7]), fieldCreator('password', 'password', InputForm, [required, maxLength7], 'password'), fieldCreator('', 'RememberMe', 'input', [], 'checkbox', 'Remember me'), captchaUrl && React.createElement(\"img\", {\n    src: captchaUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), captchaUrl && fieldCreator('symbols from image', 'captcha', InputForm, [required]), error && React.createElement(\"div\", {\n    className: s.formSummaryEror,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, error), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Login\")));\n};\n\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n  };\n\n  if (props.isAuth) {\n    return React.createElement(Redirect, {\n      to: '/profile',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Login\"), React.createElement(LoginReduxForm, {\n    onSubmit: onSubmit,\n    captchaUrl: props.captchaUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth,\n  captchaUrl: state.auth.captchaUrl\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"sources":["/Users/viktortursunkulov/Desktop/gitt/network/src/Components/Login/Login.jsx"],"names":["React","reduxForm","InputForm","fieldCreator","maxLengthCreator","required","login","connect","Redirect","s","maxLength7","LoginForm","handleSubmit","error","captchaUrl","formSummaryEror","LoginReduxForm","form","Login","props","onSubmit","formData","email","password","rememberMe","captcha","isAuth","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAAyB,YAAzB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,uCAAxC;AACA,SAASC,gBAAT,EAA2BC,QAA3B,QAA2C,gCAA3C;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,CAAP,MAAc,kDAAd;AAEA,MAAMC,UAAU,GAAGN,gBAAgB,CAAC,EAAD,CAAnC;;AAEA,MAAMO,SAAS,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA;AAAtB,CAAD,KAAuC;AACrD,SAAO;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFT,YAAY,CAAC,OAAD,EAAU,OAAV,EAAmBD,SAAnB,EAA8B,CAACG,QAAD,EAAWK,UAAX,CAA9B,CADV,EAEFP,YAAY,CAAC,UAAD,EAAa,UAAb,EAAyBD,SAAzB,EAAoC,CAACG,QAAD,EAAWK,UAAX,CAApC,EAA4D,UAA5D,CAFV,EAGFP,YAAY,CAAC,EAAD,EAAK,YAAL,EAAmB,OAAnB,EAA4B,EAA5B,EAAgC,UAAhC,EAA4C,aAA5C,CAHV,EAIFW,UAAU,IAAI;AAAK,IAAA,GAAG,EAAEA,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJZ,EAKFA,UAAU,IAAIX,YAAY,CAAC,oBAAD,EAAuB,SAAvB,EAAkCD,SAAlC,EAA6C,CAACG,QAAD,CAA7C,CALxB,EASFQ,KAAK,IAAI;AAAK,IAAA,SAAS,EAAEJ,CAAC,CAACM,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACjBF,KADiB,CATP,EAYH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAL,CAZG,CAAP;AAcH,CAfD;;AAgBA,MAAMG,cAAc,GAAGf,SAAS,CAAC;AAACgB,EAAAA,IAAI,EAAC;AAAN,CAAD,CAAT,CAA0BN,SAA1B,CAAvB;;AAIA,MAAMO,KAAK,GAAIC,KAAD,IAAW;AACrB,QAAMC,QAAQ,GAAIC,QAAD,IAAc;AAC3BF,IAAAA,KAAK,CAACb,KAAN,CAAYe,QAAQ,CAACC,KAArB,EAA4BD,QAAQ,CAACE,QAArC,EAA+CF,QAAQ,CAACG,UAAxD,EAAoEH,QAAQ,CAACI,OAA7E;AACH,GAFD;;AAGJ,MAAGN,KAAK,CAACO,MAAT,EAAgB;AACZ,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AACG,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAL,EACH,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEN,QAA1B;AAAoC,IAAA,UAAU,EAAED,KAAK,CAACL,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CAAP;AAGH,CAVD;;AAaA,MAAMa,eAAe,GAAIC,KAAD,KAAY;AACpCF,EAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH,MADiB;AAEpCZ,EAAAA,UAAU,EAACc,KAAK,CAACC,IAAN,CAAWf;AAFc,CAAZ,CAAxB;;AAKA,eAAeP,OAAO,CAACoB,eAAD,EAAkB;AAACrB,EAAAA;AAAD,CAAlB,CAAP,CAAkCY,KAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { reduxForm} from 'redux-form';\nimport { InputForm, fieldCreator } from '../common/FormsControls/FormsControls';\nimport { maxLengthCreator, required } from '../utils/validators/validators';\nimport { login } from '../../Redux/auth-reducer';\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom';\nimport s from '../common/FormsControls/FormsControls.module.css'\n\nconst maxLength7 = maxLengthCreator(20);\n\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\n    return <form onSubmit={handleSubmit}>\n        {fieldCreator('email', 'email', InputForm, [required, maxLength7])}\n        {fieldCreator('password', 'password', InputForm, [required, maxLength7], 'password' )}\n        {fieldCreator('', 'RememberMe', 'input', [], 'checkbox', 'Remember me')}\n        {captchaUrl && <img src={captchaUrl} />}\n        {captchaUrl && fieldCreator('symbols from image', 'captcha', InputForm, [required])}\n        {/* <div><Field placeholder=\"Email\" name={'email'} component={InputForm} validate={[required, maxLength7]}/></div> */}\n        {/* <div><Field placeholder=\"password\" name={'password'} component={InputForm} type='password'  validate={[required, maxLength7]}/></div>\n        <div><Field type=\"checkbox\" name={'RememberMe'} component={'input'} /> Remember me</div> */}\n        {error && <div className={s.formSummaryEror}>\n{error}\n        </div>}\n        <div><button>Login</button></div>\n    </form>\n}\nconst LoginReduxForm = reduxForm({form:'login'})(LoginForm);\n\n\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n    }\nif(props.isAuth){\n    return <Redirect to={'/profile'} />\n}\n    return <div><h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n    </div>\n}\n\n\nconst mapStateToProps = (state) => ({\nisAuth: state.auth.isAuth,\ncaptchaUrl:state.auth.captchaUrl,\n})\n\nexport default connect(mapStateToProps, {login})(Login);"]},"metadata":{},"sourceType":"module"}