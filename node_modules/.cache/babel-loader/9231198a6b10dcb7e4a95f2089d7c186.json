{"ast":null,"code":"import { createSelector } from 'reselect';\nexport const superHardCore = state => {\n  return state.usersPage.users;\n};\nexport const getPageSize = state => {\n  return state.usersPage.pageSize;\n};\nexport const getTotalUsersCount = state => {\n  return state.usersPage.totalUsersCount;\n};\nexport const getCurrentPage = state => {\n  return state.usersPage.currentPage;\n};\nexport const getIsFetching = state => {\n  return state.usersPage.isFetching;\n};\nexport const getFollowingInProgress = state => {\n  return state.usersPage.followingInProgress;\n};\nexport const getUsersSel = createSelector(superHardCore, users => {\n  return users.filter(u => true);\n});","map":{"version":3,"sources":["/Users/viktortursunkulov/Desktop/gitt/network/src/Redux/selectors.js"],"names":["createSelector","superHardCore","state","usersPage","users","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getUsersSel","filter","u"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AAEA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AACpC,SAAOA,KAAK,CAACC,SAAN,CAAgBC,KAAvB;AACH,CAFM;AAIP,OAAO,MAAMC,WAAW,GAAIH,KAAD,IAAW;AAClC,SAAOA,KAAK,CAACC,SAAN,CAAgBG,QAAvB;AACH,CAFM;AAGP,OAAO,MAAMC,kBAAkB,GAAIL,KAAD,IAAW;AACzC,SAAOA,KAAK,CAACC,SAAN,CAAgBK,eAAvB;AACH,CAFM;AAGP,OAAO,MAAMC,cAAc,GAAIP,KAAD,IAAW;AACrC,SAAOA,KAAK,CAACC,SAAN,CAAgBO,WAAvB;AACH,CAFM;AAGP,OAAO,MAAMC,aAAa,GAAIT,KAAD,IAAW;AACpC,SAAOA,KAAK,CAACC,SAAN,CAAgBS,UAAvB;AACH,CAFM;AAGP,OAAO,MAAMC,sBAAsB,GAAIX,KAAD,IAAW;AAC7C,SAAOA,KAAK,CAACC,SAAN,CAAgBW,mBAAvB;AACH,CAFM;AAKP,OAAO,MAAMC,WAAW,GAAGf,cAAc,CAACC,aAAD,EAAiBG,KAAD,IAAW;AAChE,SAAOA,KAAK,CAACY,MAAN,CAAaC,CAAC,IAAI,IAAlB,CAAP;AACH,CAFwC,CAAlC","sourcesContent":["import { createSelector } from 'reselect';\n\nexport const superHardCore = (state) => {\n    return state.usersPage.users\n}\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize\n}\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount\n}\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage\n}\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching\n}\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress\n}\n\n\nexport const getUsersSel = createSelector(superHardCore, (users) => {\n    return users.filter(u => true)\n})"]},"metadata":{},"sourceType":"module"}