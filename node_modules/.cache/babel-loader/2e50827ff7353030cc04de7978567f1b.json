{"ast":null,"code":"var _jsxFileName = \"/Users/viktortursunkulov/Desktop/gitt/network/src/Components/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport Users from './Users';\nimport { connect } from 'react-redux';\nimport { setCurrentPage, toggleFollowingProgress, getUsers, follow, unfollow } from '../../Redux/users-reducer';\nimport { withAuthRedirect } from '../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\nimport Preloader from '../common/Preloader/preloader';\nimport { getUsersSelect, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../Redux/users-selectors';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      const {\n        pageSize,\n        getUsers\n      } = this.props;\n      getUsers(pageNumber, pageSize);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      currentPage,\n      pageSize\n    } = this.props;\n    this.props.getUsers(currentPage, pageSize);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      usersPage: this.props.usersPage,\n      isFetching: this.props.isFetching,\n      followingInProgress: this.props.followingInProgress,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    usersPage: getUsersSelect(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  setCurrentPage,\n  toggleFollowingProgress,\n  follow,\n  getUsers,\n  unfollow\n}))(UsersContainer);","map":{"version":3,"sources":["/Users/viktortursunkulov/Desktop/gitt/network/src/Components/Users/UsersContainer.jsx"],"names":["React","Users","connect","setCurrentPage","toggleFollowingProgress","getUsers","follow","unfollow","withAuthRedirect","compose","Preloader","getUsersSelect","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","Component","onPageChanged","pageNumber","pageSize","props","componentDidMount","currentPage","render","isFetching","totalUsersCount","usersPage","followingInProgress","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,cAAR,EAAwBC,uBAAxB,EAAiDC,QAAjD,EAA2DC,MAA3D,EAAmEC,QAAnE,QAAmF,2BAAnF;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,kBAAtC,EAA0DC,cAA1D,EAA0EC,aAA1E,EAAyFC,sBAAzF,QAAuH,6BAAvH;;AAGA,MAAMC,cAAN,SAA6BjB,KAAK,CAACkB,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAOzCC,aAPyC,GAOxBC,UAAD,IAAgB;AAC5B,YAAM;AAACC,QAAAA,QAAD;AAAWhB,QAAAA;AAAX,UAAuB,KAAKiB,KAAlC;AACAjB,MAAAA,QAAQ,CAACe,UAAD,EAAaC,QAAb,CAAR;AAEH,KAXwC;AAAA;;AAEzCE,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACC,MAAAA,WAAD;AAAcH,MAAAA;AAAd,QAA0B,KAAKC,KAArC;AACI,SAAKA,KAAL,CAAWjB,QAAX,CAAoBmB,WAApB,EAAiCH,QAAjC;AACP;;AAQDI,EAAAA,MAAM,GAAG;AACL,WAAO,0CACR,KAAKH,KAAL,CAAWI,UAAX,GAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAwC,IADhC,EAEP,oBAAC,KAAD;AACI,MAAA,eAAe,EAAE,KAAKJ,KAAL,CAAWK,eADhC;AAEI,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWD,QAFzB;AAGI,MAAA,WAAW,EAAE,KAAKC,KAAL,CAAWE,WAH5B;AAII,MAAA,aAAa,EAAE,KAAKL,aAJxB;AAKI,MAAA,SAAS,EAAE,KAAKG,KAAL,CAAWM,SAL1B;AAMI,MAAA,UAAU,EAAE,KAAKN,KAAL,CAAWI,UAN3B;AAOI,MAAA,mBAAmB,EAAE,KAAKJ,KAAL,CAAWO,mBAPpC;AAQI,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWhB,MARvB;AASI,MAAA,QAAQ,EAAE,KAAKgB,KAAL,CAAWf,QATzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFO,CAAP;AAgBH;;AA9BwC;;AAiC7C,IAAIuB,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHH,IAAAA,SAAS,EAAEjB,cAAc,CAACoB,KAAD,CADtB;AAEHV,IAAAA,QAAQ,EAAET,WAAW,CAACmB,KAAD,CAFlB;AAGHJ,IAAAA,eAAe,EAAEd,kBAAkB,CAACkB,KAAD,CAHhC;AAIHP,IAAAA,WAAW,EAAEV,cAAc,CAACiB,KAAD,CAJxB;AAKHL,IAAAA,UAAU,EAAEX,aAAa,CAACgB,KAAD,CALtB;AAMHF,IAAAA,mBAAmB,EAACb,sBAAsB,CAACe,KAAD;AANvC,GAAP;AAQH,CATD;;AAWA,eAAetB,OAAO,CAClBP,OAAO,CAAC4B,eAAD,EACP;AAAC3B,EAAAA,cAAD;AAAgBC,EAAAA,uBAAhB;AAAyCE,EAAAA,MAAzC;AAAkDD,EAAAA,QAAlD;AAA4DE,EAAAA;AAA5D,CADO,CADW,CAAP,CAE6DU,cAF7D,CAAf","sourcesContent":["import React from 'react';\nimport Users from './Users';\nimport { connect } from 'react-redux';\nimport {setCurrentPage, toggleFollowingProgress, getUsers, follow, unfollow } from '../../Redux/users-reducer';\nimport { withAuthRedirect } from '../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\nimport Preloader from '../common/Preloader/preloader';\nimport { getUsersSelect, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../Redux/users-selectors';\n\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n            this.props.getUsers(currentPage, pageSize)\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize, getUsers} = this.props;\n        getUsers(pageNumber, pageSize)\n      \n    }\n\n    render() {\n        return <>\n      {this.props.isFetching ? <Preloader /> : null}\n        <Users\n            totalUsersCount={this.props.totalUsersCount}\n            pageSize={this.props.pageSize}\n            currentPage={this.props.currentPage}\n            onPageChanged={this.onPageChanged}\n            usersPage={this.props.usersPage}\n            isFetching={this.props.isFetching}\n            followingInProgress={this.props.followingInProgress}\n            follow={this.props.follow}\n            unfollow={this.props.unfollow}\n            \n        />\n        \n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        usersPage: getUsersSelect(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress:getFollowingInProgress(state),\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, \n    {setCurrentPage,toggleFollowingProgress, follow,  getUsers, unfollow}))(UsersContainer)\n"]},"metadata":{},"sourceType":"module"}