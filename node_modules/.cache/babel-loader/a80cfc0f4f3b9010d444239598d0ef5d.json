{"ast":null,"code":"import { getAuthMe, login } from \"./auth-reducer\";\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\nconst initialState = {\n  initialized: false,\n  fake: 10\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return { ...state,\n        initialized: true\n      };\n\n    case FAKE:\n      return { ...state,\n        fake: state.fake + 1\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS\n});\nexport const initializeApp = () => dispatch => {\n  let promis = dispatch(getAuthMe());\n  Promise.all([promis]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["/Users/viktortursunkulov/Desktop/it/src/Redux/app-reducer.js"],"names":["getAuthMe","login","INITIALIZED_SUCCESS","initialState","initialized","fake","appReducer","state","action","type","FAKE","initializedSuccess","initializeApp","dispatch","promis","Promise","all","then"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,KAApB,QAAiC,gBAAjC;AAEA,MAAMC,mBAAmB,GAAG,qBAA5B;AAIA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,KADI;AAEjBC,EAAAA,IAAI,EAAE;AAFW,CAArB;;AAKA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,mBAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHH,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAIJ,SAAKM,IAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,GAAa;AAFhB,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAZR;AAcH,CAfD;;AAgBA,OAAO,MAAMI,kBAAkB,GAAG,OAAO;AAAEF,EAAAA,IAAI,EAAEP;AAAR,CAAP,CAA3B;AACP,OAAO,MAAMU,aAAa,GAAG,MAAOC,QAAD,IAAc;AAC7C,MAAIC,MAAM,GAAGD,QAAQ,CAACb,SAAS,EAAV,CAArB;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,MAAD,CAAZ,EACKG,IADL,CACU,MAAM;AACRJ,IAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,GAHL;AAIH,CANM;AASP,eAAeL,UAAf","sourcesContent":["import { getAuthMe, login } from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\n\nconst initialState = {\n    initialized: false,\n    fake: 10,\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true,\n            }\n        case FAKE:\n            return {\n                ...state,\n                fake: state.fake + 1,\n            }\n        default:\n            return state;\n    }\n}\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\nexport const initializeApp = () => (dispatch) => {\n    let promis = dispatch(getAuthMe());\n    Promise.all([promis])\n        .then(() => {\n            dispatch(initializedSuccess())\n        })\n}\n\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}