{"ast":null,"code":"var _jsxFileName = \"/Users/viktortursunkulov/Desktop/gitt/network/src/Components/Users/UsersContainer.tsx\";\nimport React from 'react';\nimport Users from './Users';\nimport { connect } from 'react-redux';\nimport { setCurrentPage, toggleFollowingProgress, getUsers, follow, unfollow } from '../../Redux/users-reducer';\nimport { compose } from 'redux';\nimport Preloader from '../common/Preloader/preloader';\nimport { getUsersSelect, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../Redux/users-selectors';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      const {\n        pageSize,\n        getUsers\n      } = this.props;\n      getUsers(pageNumber, pageSize);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      currentPage,\n      pageSize\n    } = this.props;\n    this.props.getUsers(currentPage, pageSize);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.pageTitle), this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      followingInProgress: this.props.followingInProgress,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: getUsersSelect(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  setCurrentPage,\n  toggleFollowingProgress,\n  follow,\n  getUsers,\n  unfollow\n}))(UsersContainer);","map":{"version":3,"sources":["/Users/viktortursunkulov/Desktop/gitt/network/src/Components/Users/UsersContainer.tsx"],"names":["React","Users","connect","setCurrentPage","toggleFollowingProgress","getUsers","follow","unfollow","compose","Preloader","getUsersSelect","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","Component","onPageChanged","pageNumber","pageSize","props","componentDidMount","currentPage","render","pageTitle","isFetching","totalUsersCount","users","followingInProgress","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,cAAR,EAAwBC,uBAAxB,EAAiDC,QAAjD,EAA2DC,MAA3D,EAAmEC,QAAnE,QAAmF,2BAAnF;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAASC,cAAT,EAAyBC,WAAzB,EAAsCC,kBAAtC,EAA0DC,cAA1D,EAA0EC,aAA1E,EAAyFC,sBAAzF,QAAuH,6BAAvH;;AA6BA,MAAMC,cAAN,SAA6BhB,KAAK,CAACiB,SAAnC,CAAyD;AAAA;AAAA;;AAAA,SAOrDC,aAPqD,GAOpCC,UAAD,IAAuB;AACnC,YAAM;AAACC,QAAAA,QAAD;AAAWf,QAAAA;AAAX,UAAuB,KAAKgB,KAAlC;AACAhB,MAAAA,QAAQ,CAACc,UAAD,EAAaC,QAAb,CAAR;AAEH,KAXoD;AAAA;;AAErDE,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAACC,MAAAA,WAAD;AAAcH,MAAAA;AAAd,QAA0B,KAAKC,KAArC;AACI,SAAKA,KAAL,CAAWhB,QAAX,CAAoBkB,WAApB,EAAiCH,QAAjC;AACP;;AAQDI,EAAAA,MAAM,GAAG;AAEL,WAAO,0CACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKH,KAAL,CAAWI,SAAhB,CADO,EAER,KAAKJ,KAAL,CAAWK,UAAX,GAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,GAAwC,IAFhC,EAGP,oBAAC,KAAD;AACI,MAAA,eAAe,EAAE,KAAKL,KAAL,CAAWM,eADhC;AAEI,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWD,QAFzB;AAGI,MAAA,WAAW,EAAE,KAAKC,KAAL,CAAWE,WAH5B;AAII,MAAA,aAAa,EAAE,KAAKL,aAJxB;AAKI,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWO,KALtB;AAMI,MAAA,mBAAmB,EAAE,KAAKP,KAAL,CAAWQ,mBANpC;AAOI,MAAA,MAAM,EAAE,KAAKR,KAAL,CAAWf,MAPvB;AAQI,MAAA,QAAQ,EAAE,KAAKe,KAAL,CAAWd,QARzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHO,CAAP;AAgBH;;AA/BoD;;AAkCzD,IAAIuB,eAAe,GAAIC,KAAD,IAA0C;AAC5D,SAAO;AACHH,IAAAA,KAAK,EAAElB,cAAc,CAACqB,KAAD,CADlB;AAEHX,IAAAA,QAAQ,EAAET,WAAW,CAACoB,KAAD,CAFlB;AAGHJ,IAAAA,eAAe,EAAEf,kBAAkB,CAACmB,KAAD,CAHhC;AAIHR,IAAAA,WAAW,EAAEV,cAAc,CAACkB,KAAD,CAJxB;AAKHL,IAAAA,UAAU,EAAEZ,aAAa,CAACiB,KAAD,CALtB;AAMHF,IAAAA,mBAAmB,EAACd,sBAAsB,CAACgB,KAAD;AANvC,GAAP;AAQH,CATD;;AAWA,eAAevB,OAAO,CAClBN,OAAO,CAAsE4B,eAAtE,EAAuF;AAAC3B,EAAAA,cAAD;AAAiBC,EAAAA,uBAAjB;AAA0CE,EAAAA,MAA1C;AAAmDD,EAAAA,QAAnD;AAA6DE,EAAAA;AAA7D,CAAvF,CADW,CAAP,CAETS,cAFS,CAAf","sourcesContent":["import React from 'react'\nimport Users from './Users'\nimport { connect } from 'react-redux'\nimport {setCurrentPage, toggleFollowingProgress, getUsers, follow, unfollow } from '../../Redux/users-reducer'\nimport { compose } from 'redux'\nimport Preloader from '../common/Preloader/preloader'\nimport { getUsersSelect, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../Redux/users-selectors'\nimport {UserType} from '../../types/types'\nimport {AppStateType} from '../../Redux/redux-store'\n\n\ntype MapStatePropsType = {\n    currentPage:number\n    pageSize: number\n    isFetching: boolean\n    totalUsersCount:number\n    users: Array<UserType>\n    followingInProgress:Array<number>\n}\ntype MapDispatchPropsType = {\n    getUsers:(currentPage:number,  pageSize: number) => void\n    unfollow: () => void\n    follow: () => void\n    setCurrentPage: () => void\n    toggleFollowingProgress:() => void\n}\ntype ownPropsType= {\n    pageTitle:string\n}\n\n\ntype PropsType = MapStatePropsType & MapDispatchPropsType & ownPropsType\n\n\n\nclass UsersContainer extends React.Component <PropsType> {\n\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n            this.props.getUsers(currentPage, pageSize)\n    }\n\n    onPageChanged = (pageNumber:number) => {\n        const {pageSize, getUsers} = this.props;\n        getUsers(pageNumber, pageSize)\n      \n    }\n\n    render() {\n        \n        return <>\n        <h2>{this.props.pageTitle}</h2>\n      {this.props.isFetching ? <Preloader /> : null}\n        <Users\n            totalUsersCount={this.props.totalUsersCount}\n            pageSize={this.props.pageSize}\n            currentPage={this.props.currentPage}\n            onPageChanged={this.onPageChanged}\n            users={this.props.users}\n            followingInProgress={this.props.followingInProgress}\n            follow={this.props.follow}\n            unfollow={this.props.unfollow}\n            \n        />\n        \n        </>\n    }\n}\n\nlet mapStateToProps = (state:AppStateType):MapStatePropsType => {    \n    return {\n        users: getUsersSelect(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress:getFollowingInProgress(state),\n    }\n}\n\nexport default compose(\n    connect<MapStatePropsType, MapDispatchPropsType, ownPropsType, AppStateType>(mapStateToProps, {setCurrentPage, toggleFollowingProgress, follow,  getUsers, unfollow})\n    )(UsersContainer)\n"]},"metadata":{},"sourceType":"module"}