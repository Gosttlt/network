{"ast":null,"code":"var _jsxFileName = \"/Users/viktortursunkulov/Desktop/gitt/network/src/Components/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport Users from './Users';\nimport { connect } from 'react-redux';\nimport { setCurrentPage, toggleFollowingProgress, getUsers, follow, unfollow } from '../../Redux/users-reducer';\nimport { withAuthRedirect } from '../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\nimport Preloader from '../common/Preloader/preloader';\nimport { getPageSize, getUsersSel, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress, superHardCore } from '../../Redux/selectors';\nimport { getUsersSelect } from '../../Redux/users-selectors';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      const {\n        pageSize,\n        getUsers\n      } = this.props;\n      getUsers(pageNumber, pageSize);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      currentPage,\n      pageSize\n    } = this.props;\n    this.props.getUsers(currentPage, pageSize);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(Preloader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }) : null, React.createElement(Users, {\n      totalUsersCount: this.props.totalUsersCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      usersPage: this.props.usersPage,\n      isFetching: this.props.isFetching,\n      followingInProgress: this.props.followingInProgress,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n} // let mapStateToProps = (state) => {\n//     return {\n//         usersPage: state.usersPage.users,\n//         pageSize: state.usersPage.pageSize,\n//         totalUsersCount: state.usersPage.totalUsersCount,\n//         currentPage: state.usersPage.currentPage,\n//         isFetching: state.usersPage.isFetching,\n//         followingInProgress:state.usersPage.followingInProgress,\n//     }\n// }\n\n\nlet mapStateToProps = state => {\n  return {\n    usersPage: getUsersSelect(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n}; // let mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (id) => {\n//             dispatch(followAC(id))\n//         },\n//         unFollow: (id) => {\n//             dispatch(unfollowAC(id))\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsers(users))\n//         },\n//         setCurrentPage: (currentPage) => {\n//             dispatch(setCurrentPageAC(currentPage))\n//         },\n//         setUsersTotalCount: (totalCount) => {\n//             dispatch(setUsersTotalCountAC(totalCount))\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(toggleIsFetchingAC(isFetching))\n//         }\n//     }\n// }\n\n\nexport default compose(connect(mapStateToProps, {\n  setCurrentPage,\n  toggleFollowingProgress,\n  follow,\n  getUsers,\n  unfollow\n}))(UsersContainer);","map":{"version":3,"sources":["/Users/viktortursunkulov/Desktop/gitt/network/src/Components/Users/UsersContainer.jsx"],"names":["React","Users","connect","setCurrentPage","toggleFollowingProgress","getUsers","follow","unfollow","withAuthRedirect","compose","Preloader","getPageSize","getUsersSel","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","superHardCore","getUsersSelect","UsersContainer","Component","onPageChanged","pageNumber","pageSize","props","componentDidMount","currentPage","render","isFetching","totalUsersCount","usersPage","followingInProgress","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Users from './Users';\nimport { connect } from 'react-redux';\nimport {setCurrentPage, toggleFollowingProgress, getUsers, follow, unfollow } from '../../Redux/users-reducer';\nimport { withAuthRedirect } from '../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\nimport Preloader from '../common/Preloader/preloader';\nimport { getPageSize, getUsersSel, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress, superHardCore } from '../../Redux/selectors';\nimport { getUsersSelect } from '../../Redux/users-selectors';\n\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n            this.props.getUsers(currentPage, pageSize)\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize, getUsers} = this.props;\n        getUsers(pageNumber, pageSize)\n      \n    }\n\n    render() {\n        return <>\n      {this.props.isFetching ? <Preloader /> : null}\n        <Users\n            totalUsersCount={this.props.totalUsersCount}\n            pageSize={this.props.pageSize}\n            currentPage={this.props.currentPage}\n            onPageChanged={this.onPageChanged}\n            usersPage={this.props.usersPage}\n            isFetching={this.props.isFetching}\n            followingInProgress={this.props.followingInProgress}\n            follow={this.props.follow}\n            unfollow={this.props.unfollow}\n            \n        />\n        \n        </>\n    }\n}\n\n// let mapStateToProps = (state) => {\n//     return {\n//         usersPage: state.usersPage.users,\n//         pageSize: state.usersPage.pageSize,\n//         totalUsersCount: state.usersPage.totalUsersCount,\n//         currentPage: state.usersPage.currentPage,\n//         isFetching: state.usersPage.isFetching,\n//         followingInProgress:state.usersPage.followingInProgress,\n//     }\n// }\n\nlet mapStateToProps = (state) => {\n  \n    return {\n        usersPage: getUsersSelect(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress:getFollowingInProgress(state),\n    }\n}\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (id) => {\n//             dispatch(followAC(id))\n//         },\n//         unFollow: (id) => {\n//             dispatch(unfollowAC(id))\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsers(users))\n//         },\n//         setCurrentPage: (currentPage) => {\n//             dispatch(setCurrentPageAC(currentPage))\n//         },\n//         setUsersTotalCount: (totalCount) => {\n//             dispatch(setUsersTotalCountAC(totalCount))\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(toggleIsFetchingAC(isFetching))\n//         }\n//     }\n// }\n\n\n\nexport default compose(\n    connect(mapStateToProps, \n    {setCurrentPage,toggleFollowingProgress, follow,  getUsers, unfollow}))(UsersContainer)\n"]},"metadata":{},"sourceType":"module"}