{"ast":null,"code":"import { userAPI } from \"../Components/api/api\";\nimport { updateObjectInArray } from \"../Components/utils/object-helpers\";\nconst FOLLOW_USER = 'FOLLOW-USER';\nconst UNFOLLOW_USER = 'UNFOLLOW-USER';\nconst SET_USERS = 'SET-USERS';\nconst SET_CORRENT_PAGE = 'SET-CORRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 10,\n  totalUsersCount: 3000,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW_USER:\n      return { ...state,\n        users: updateObjectInArray(state.users, action.userId, 'id', {\n          followed: true\n        }) // state.users.map(u => {\n        //     if (action.userId === u.id) {\n        //         return { ...u, followed: true }\n        //     }\n        //     return u\n        // })\n\n      };\n\n    case UNFOLLOW_USER:\n      return { ...state,\n        users: updateObjectInArray(state.users, action.userId, 'id', {\n          followed: false\n        })\n      };\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_CORRENT_PAGE:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.count\n        };\n      }\n\n    case TOGGLE_IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isFetching\n        };\n      }\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      {\n        return { ...state,\n          followingInProgress: action.isFetching ? [...state.followingInProgress, action.id] : state.followingInProgress.filter(id => id != action.id)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = userId => ({\n  type: FOLLOW_USER,\n  userId\n});\nexport const unfollowSuccess = userId => ({\n  type: UNFOLLOW_USER,\n  userId\n});\nexport const setUsers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPage = currentPage => ({\n  type: SET_CORRENT_PAGE,\n  currentPage\n});\nexport const setUsersTotalCount = count => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count\n});\nexport const toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport const toggleFollowingProgress = (isFetching, id) => ({\n  type: TOGGLE_IS_FOLLOWING_PROGRESS,\n  isFetching,\n  id\n});\nexport const getUsers = (currentPage = 1, pageSize = 5) => {\n  return dispatch => {\n    dispatch(setCurrentPage(currentPage));\n    dispatch(toggleIsFetching(true));\n    userAPI.getUsers(currentPage, pageSize).then(data => {\n      dispatch(toggleIsFetching(false));\n      dispatch(setUsers(data.items));\n      dispatch(setUsersTotalCount(data.totalCount));\n    });\n  };\n};\n\nconst followUnfollowFlow = async (userId, dispatch, apiMethod, actionCreator) => {\n  dispatch(toggleFollowingProgress(true, userId));\n  let data = await apiMethod(userId);\n\n  if (data.resultCode == 0) {\n    dispatch(actionCreator(userId));\n  }\n\n  dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const follow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(userId, dispatch, userAPI.userFollow.bind(userAPI), followSuccess);\n  };\n};\nexport const unfollow = userId => {\n  return async dispatch => {\n    followUnfollowFlow(userId, dispatch, userAPI.userUnfollow.bind(userAPI), unfollowSuccess);\n  };\n}; // export const follow = (userId) => {\n//     return async (dispatch) => {\n//         dispatch(toggleFollowingProgress(true, userId))\n//         let data = await userAPI.userFollow(userId);\n//         if (data.resultCode == 0) {\n//             dispatch(followSuccess(userId))\n//         }\n//         dispatch(toggleFollowingProgress(false, userId))\n//     }\n// }\n// export const unfollow = (userId) => {\n//     return async (dispatch) => {\n//         dispatch(toggleFollowingProgress(true, userId))\n//         let data = await userAPI.userUnfollow(userId)\n//         if (data.resultCode == 0) {\n//             dispatch(unfollowSuccess(userId))\n//         }\n//         dispatch(toggleFollowingProgress(false, userId))\n//     }\n// }\n\nexport default usersReducer;","map":{"version":3,"sources":["/Users/viktortursunkulov/Desktop/it/src/Redux/users-reducer.js"],"names":["userAPI","updateObjectInArray","FOLLOW_USER","UNFOLLOW_USER","SET_USERS","SET_CORRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersReducer","state","action","type","userId","followed","count","id","filter","followSuccess","unfollowSuccess","setUsers","setCurrentPage","setUsersTotalCount","toggleIsFetching","toggleFollowingProgress","getUsers","dispatch","then","data","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","resultCode","follow","userFollow","bind","unfollow","userUnfollow"],"mappings":"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","sourcesContent":["import { userAPI } from \"../Components/api/api\";\nimport { updateObjectInArray } from \"../Components/utils/object-helpers\";\n\nconst FOLLOW_USER = 'FOLLOW-USER';\nconst UNFOLLOW_USER = 'UNFOLLOW-USER';\nconst SET_USERS = 'SET-USERS';\nconst SET_CORRENT_PAGE = 'SET-CORRENT-PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 3000,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [],\n}\n\n\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW_USER:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: true })\n\n\n                // state.users.map(u => {\n                //     if (action.userId === u.id) {\n                //         return { ...u, followed: true }\n                //     }\n                //     return u\n                // })\n            }\n        case UNFOLLOW_USER:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, 'id', { followed: false })\n            }\n        case SET_USERS: {\n            return { ...state, users: action.users }\n        }\n        case SET_CORRENT_PAGE: {\n            return { ...state, currentPage: action.currentPage }\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return { ...state, totalUsersCount: action.count }\n        }\n        case TOGGLE_IS_FETCHING: {\n            return { ...state, isFetching: action.isFetching }\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.id]\n                    : state.followingInProgress.filter(id => id != action.id)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const followSuccess = (userId) => ({ type: FOLLOW_USER, userId })\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW_USER, userId })\nexport const setUsers = (users) => ({ type: SET_USERS, users })\nexport const setCurrentPage = (currentPage) => ({ type: SET_CORRENT_PAGE, currentPage })\nexport const setUsersTotalCount = (count) => ({ type: SET_TOTAL_USERS_COUNT, count })\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\nexport const toggleFollowingProgress = (isFetching, id) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, id })\n\n\nexport const getUsers = (currentPage = 1, pageSize = 5) => {\n    return (dispatch) => {\n        dispatch(setCurrentPage(currentPage))\n        dispatch(toggleIsFetching(true));\n        userAPI.getUsers(currentPage, pageSize).then((data) => {\n            dispatch(toggleIsFetching(false));\n            dispatch(setUsers(data.items));\n            dispatch(setUsersTotalCount(data.totalCount));\n        });\n\n    }\n}\nconst followUnfollowFlow = async (userId, dispatch, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId))\n    let data = await apiMethod(userId);\n    if (data.resultCode == 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleFollowingProgress(false, userId))\n\n\n}\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(userId, dispatch, userAPI.userFollow.bind(userAPI), followSuccess)\n    }\n}\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(userId, dispatch, userAPI.userUnfollow.bind(userAPI), unfollowSuccess)\n    }\n}\n\n// export const follow = (userId) => {\n//     return async (dispatch) => {\n//         dispatch(toggleFollowingProgress(true, userId))\n//         let data = await userAPI.userFollow(userId);\n//         if (data.resultCode == 0) {\n//             dispatch(followSuccess(userId))\n//         }\n//         dispatch(toggleFollowingProgress(false, userId))\n//     }\n// }\n// export const unfollow = (userId) => {\n//     return async (dispatch) => {\n//         dispatch(toggleFollowingProgress(true, userId))\n//         let data = await userAPI.userUnfollow(userId)\n//         if (data.resultCode == 0) {\n//             dispatch(unfollowSuccess(userId))\n//         }\n//         dispatch(toggleFollowingProgress(false, userId))\n//     }\n// }\n\n\nexport default usersReducer;"]},"metadata":{},"sourceType":"module"}