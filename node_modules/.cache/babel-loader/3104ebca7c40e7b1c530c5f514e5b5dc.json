{"ast":null,"code":"var _jsxFileName = \"/Users/viktortursunkulov/Desktop/it/src/Components/Profile/ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getProfile, getStatus, getUpdateStatus, savePhoto } from '../../Redux/profile-reducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n  refrashProfile() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.authId;\n\n      if (!userId) {\n        this.props.history.push('/login');\n      }\n    }\n\n    this.props.getStatus(userId);\n    this.props.getProfile(userId);\n  }\n\n  componentDidMount() {\n    this.refrashProfile();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.match.params.userId != this.props.match.params.userId) {\n      this.refrashProfile();\n    }\n  }\n\n  render() {\n    return React.createElement(Profile, Object.assign({}, this.props, {\n      isOwner: !this.props.match.params.userId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authId: state.auth.id,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getProfile,\n  getStatus,\n  getUpdateStatus,\n  savePhoto,\n  saveProfile\n}), withRouter)(ProfileContainer);","map":{"version":3,"sources":["/Users/viktortursunkulov/Desktop/it/src/Components/Profile/ProfileContainer.jsx"],"names":["React","Profile","connect","getProfile","getStatus","getUpdateStatus","savePhoto","withRouter","compose","ProfileContainer","Component","refrashProfile","userId","props","match","params","authId","history","push","componentDidMount","componentDidUpdate","prevProps","render","mapStateToProps","state","profile","profilePage","status","auth","id","isAuth","saveProfile"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,eAAhC,EAAiDC,SAAjD,QAAkE,6BAAlE;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAIA,MAAMC,gBAAN,SAA+BT,KAAK,CAACU,SAArC,CAA+C;AAC7CC,EAAAA,cAAc,GAAE;AACd,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,MAApB;;AACA,UAAI,CAACJ,MAAL,EAAa;AACX,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD;AACF;;AACD,SAAKL,KAAL,CAAWT,SAAX,CAAqBQ,MAArB;AACA,SAAKC,KAAL,CAAWV,UAAX,CAAsBS,MAAtB;AACD;;AAEDO,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,cAAL;AACD;;AACDS,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AAC/B,QAAGA,SAAS,CAACP,KAAV,CAAgBC,MAAhB,CAAuBH,MAAvB,IAAiC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAA5D,EAAmE;AAAC,WAAKD,cAAL;AAAsB;AACvF;;AACDW,EAAAA,MAAM,GAAG;AACP,WAAO,oBAAC,OAAD,oBAAa,KAAKT,KAAlB;AAAyB,MAAA,OAAO,EAAE,CAAC,KAAKA,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AArB4C;;AAwB/C,IAAIW,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLC,IAAAA,OAAO,EAAED,KAAK,CAACE,WAAN,CAAkBD,OADtB;AAELE,IAAAA,MAAM,EAAEH,KAAK,CAACE,WAAN,CAAkBC,MAFrB;AAGLX,IAAAA,MAAM,EAAEQ,KAAK,CAACI,IAAN,CAAWC,EAHd;AAILC,IAAAA,MAAM,EAAEN,KAAK,CAACI,IAAN,CAAWE;AAJd,GAAP;AAMD,CAPD;;AASA,eAAetB,OAAO,CACpBN,OAAO,CAACqB,eAAD,EAAkB;AAAEpB,EAAAA,UAAF;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA,eAAzB;AAA0CC,EAAAA,SAA1C;AAAqDyB,EAAAA;AAArD,CAAlB,CADa,EAEpBxB,UAFoB,CAAP,CAEDE,gBAFC,CAAf","sourcesContent":["import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getProfile, getStatus, getUpdateStatus, savePhoto } from '../../Redux/profile-reducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\n\n\nclass ProfileContainer extends React.Component {\n  refrashProfile(){\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authId;\n      if (!userId) {\n        this.props.history.push('/login')\n      }\n    }\n    this.props.getStatus(userId);\n    this.props.getProfile(userId);\n  }\n\n  componentDidMount() {\n    this.refrashProfile()\n  }\n  componentDidUpdate(prevProps){\nif(prevProps.match.params.userId != this.props.match.params.userId){this.refrashProfile()}\n  }\n  render() {\n    return <Profile {...this.props} isOwner={!this.props.match.params.userId} />\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authId: state.auth.id,\n    isAuth: state.auth.isAuth,\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, { getProfile, getStatus, getUpdateStatus, savePhoto, saveProfile }),\n  withRouter)(ProfileContainer)\n"]},"metadata":{},"sourceType":"module"}